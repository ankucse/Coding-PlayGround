package com.PlayGround.Coding.PlayGround.CRUD.entity;

import jakarta.persistence.*;

/**
 * Represents a User entity in the application, mapped to the "users" table in the database.
 * This class defines the structure of a user, including their ID, name, and email,
 * and serves as the persistence model for user data.
 */
@Entity
@Table(name = "users")
public class User {

    /**
     * The unique identifier for the user.
     * This field is the primary key and its value is automatically generated by the database
     * using an identity strategy.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The user's first name.
     * This field is mapped to the "first_name" column and cannot be null.
     */
    @Column(name = "first_name", nullable = false)
    private String firstName;

    /**
     * The user's last name.
     * This field is mapped to the "last_name" column and cannot be null.
     */
    @Column(name = "last_name", nullable = false)
    private String lastName;

    /**
     * The user's email address.
     * This field is mapped to the "email" column, must be unique across all users,
     * and cannot be null.
     */
    @Column(name = "email", nullable = false, unique = true)
    private String email;

    /**
     * Gets the unique identifier of the user.
     *
     * @return The user's ID.
     */
    public Long getId() {
        return id;
    }

    /**
     * Sets the unique identifier of the user.
     *
     * @param id The new ID for the user.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Gets the first name of the user.
     *
     * @return The user's first name.
     */
    public String getFirstName() {
        return firstName;
    }

    /**
     * Sets the first name of the user.
     *
     * @param firstName The new first name for the user.
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Gets the last name of the user.
     *
     * @return The user's last name.
     */
    public String getLastName() {
        return lastName;
    }

    /**
     * Sets the last name of the user.
     *
     * @param lastName The new last name for the user.
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * Gets the email address of the user.
     *
     * @return The user's email address.
     */
    public String getEmail() {
        return email;
    }

    /**
     * Sets the email address of the user.
     *
     * @param email The new email address for the user.
     */
    public void setEmail(String email) {
        this.email = email;
    }
}